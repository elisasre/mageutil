name: Base

on:
  workflow_call:
    inputs:
      image-tags:
        required: true
        type: string
    secrets:
      gar-json-key:
        required: false
      mattermost-webhook-url:
        required: false

defaults:
  run:
    working-directory: ./testdata/godemo

jobs:
  base-build:
    permissions:
      id-token: write
      contents: read
    runs-on: elisa-normal
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - uses: elisa-actions/setup-go-and-mage@v1
        with:
          modFile: /home/runner/_work/mageutil/mageutil/go.mod

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: europe-north1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.gar-json-key }}

      - uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Verify dependencies
        run: |
          cd ../../
          go mod tidy
          git diff --exit-code -- ./go.mod ./go.sum || (echo "Deps are not up to date: run 'go mod tidy' before commit" && exit 1)

      - name: Prepare demo project
        run: go mod tidy

      - name: Verify tidy check
        run: |
          if mage go:tidyAndVerify; then
            echo "mage go:tidyAndVerify should have failed"
            exit 1
          fi

      - run: mage go:lint

      - name: Unit tests
        run: |
          mage go:unitTest
          test -d target/tests/cover/unit/

      - name: Integration tests
        run: |
          mage go:integrationTest
          test -f target/testbin/godemo
          test -d target/tests/cover/int/

      - name: Validate coverage
        run: |
          mage go:coverProfile
          test -f target/tests/cover/combined/cover.txt
          go tool cover -func target/tests/cover/combined/cover.txt | grep LoadSpec | grep '100.0%'

      - name: Build
        run: |
          mage go:build
          mage go:crossBuild
          test -x target/bin/linux/amd64/godemo
          test -f target/bin/linux/amd64/godemo.sha256
          test -x target/bin/darwin/amd64/godemo
          test -f target/bin/linux/amd64/godemo.sha256
          test -x target/bin/darwin/arm64/godemo
          test -f target/bin/linux/amd64/godemo.sha256
          test -x target/bin/windows/amd64/godemo
          test -f target/bin/windows/amd64/godemo.sha256

      - name: Lambda
        run: |
          mage lambda:buildAll
          test -f target/bin/linux/amd64/lambda/godemo/bootstrap
      - name: sbom
        run: |
          mage go:sbom
          test -f target/bin/linux/amd64/godemo.bom.json
          test -f target/bin/linux/amd64/godemo.bom.json
          test -f target/bin/linux/amd64/godemo.bom.json
          test -f target/bin/windows/amd64/godemo.bom.json

      - run: mage docs:openAPI
      - run: mage docs:openAPIAndVerify
      - name: YAML lint
        run: |
          if ($(mage yaml:lint)) ; then
            echo "mage yaml:lint should have failed!"
            exit 1
          fi
          mage yaml:fmt
          mage yaml:lint

      - run: mage npm:test
      - run: mage npm:cleanBuild
      - run: mage npm:lint

      - name: Docker
        env:
          DOCKER_IMAGE_TAGS: ${{ inputs.image-tags }}
        run: |
          mage docker:build
          mage docker:push
          docker images | grep 'europe-north1-docker.pkg.dev/sose-sre-5737/sre-public/godemo'

      - name: Notify failure on main
        if: ${{ github.event_name }} != pull_request && failure()
        env:
          MATTERMOST_WEBHOOK_URL: ${{ secrets.mattermost-webhook-url }}
          MATTERMOST_TEXT: "${{ github.repository }} [${{ github.event.ref }}](${{ github.event.repository.html_url }}/tree/${{ github.event.ref }}) build failed."
        run: send-to-mattermost
